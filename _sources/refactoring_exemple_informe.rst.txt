#################
Informe de client
#################

Hem vist que ``Client.informe()`` apareix en blanc al codi que ofereix
el primer exercici.

El següent diagrama de seqüència ofereix una visió del seu
funcionament:

.. uml::
    :align: center

    actor Usuari
    Usuari -> unClient: informe()
    unClient -> unLloguer: getVehicle()
    note left: per cada lloguer
    unClient -> unVehicle: getMarca()
    unClient -> unVehicle: getModel()
    unClient -> unVehicle: getCategoria()
    unClient -> unLloguer: getDies()

    hide footbox
    skinparam sequenceArrowColor Black
    skinparam sequenceParticipantBackgroundColor White
    skinparam sequenceLifeLineBorderColor Black
    skinparam sequenceParticipantBorderColor Black

Suposa que el codi que et trobes d'aquest mètode és el següent:

.. code-block:: java
    :linenos:

    public String informe() {
        double total = 0;
        int bonificacions = 0;
        String resultat = "Informe de lloguers del client " +
            getNom() +
            " (" + getNif() + ")\n";
        for (Lloguer lloguer: lloguers) {
            double quantitat = 0;
            switch (lloguer.getVehicle().getCategoria()) {
                case Vehicle.BASIC:
                    quantitat += 3;
                    if (lloguer.getDies() > 3) {
                        quantitat += (lloguer.getDies() - 3) * 1.5;
                    }
                    break;
                case Vehicle.GENERAL:
                    quantitat += 4;
                    if (lloguer.getDies() > 2) {
                        quantitat += (lloguer.getDies() - 2) * 2.5;
                    }
                    break;
                case Vehicle.LUXE:
                    quantitat += lloguer.getDies() * 6;
                    break;
            }

            // afegeix lloguers freqüents
            bonificacions ++;

            // afegeix bonificació per dos dies de lloguer de Luxe
            if (lloguer.getVehicle().getCategoria() == Vehicle.LUXE &&
                    lloguer.getDies()>1 ) {
                bonificacions ++;
            }

            // composa els resultats d'aquest lloguer
            resultat += "\t" +
                lloguer.getVehicle().getMarca() +
                " " +
                lloguer.getVehicle().getModel() + ": " +
                (quantitat * 30) + "€" + "\n";
            total += quantitat * 30;
        }

        // afegeix informació final
        resultat += "Import a pagar: " + total + "€\n" +
            "Punts guanyats: " + bonificacions + "\n";
        return resultat;
    }

D'aquest codi en podríem dir vàries coses. Probablement no totes
*maques*. El mètode ``Client.informe()`` és molt llarg i fa un munt de
coses que segurament hauria de fer alguna altra classe. Seria una
mena de traducció directa d'un algorisme no orientat a objectes a
java. Hi ha qui arribaria a afirmar que  és un codi *lleig*.
