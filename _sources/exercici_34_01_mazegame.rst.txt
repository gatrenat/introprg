##########################################
|exerciseicon___| Exercici 34_01. Laberint
##########################################

.. rubric:: Context

* Carpeta de lliurament: ``34_01_mazegame/``

* Continguts relacionats: :doc:`poo`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

.. rubric:: Enunciat

En aquesta secció et presento una pràctica una mica més gran que la resta dels
exercicis d'aquest bloc. Està pensada per què la vagis realitzant poc a poc,
idealment en equip.

La nostra clienta ens ha demanat que desenvolupem un joc.

El joc és una barreja entre el cercamines i els de sortir d'un laberint.

Consisteix en dirigir un avatar per un laberint fins a arribar a la sortida. La
dificultat rau en que no veiem les parets del laberint fins que l'avatar no
ensopega amb elles.

Després de discutir una estona amb la clienta, hem definit algunes simulacions
que permeten fer-se una idea de com funcionarà el joc. Ella s'ha mostrat
d'acord i, més interessant per nosaltres, disposada a pagar-nos si acabem
adequadament la nostra feina.

Simulació 1: Mostra ajuda i abandona
====================================

La següent simulació demostra una interacció molt bàsica amb el programa:

* Arrencada del programa amb el laberint a jugar per línia de comandes.

* Capçalera del programa.

* Ús de l'opció d'ajuda i les opcions disponibles.

* Abandonament de la partida amb missatge discutiblement sensible.

.. code-block:: console

    $  java MazeGame laberint01.dat
    Joc del laberint
    ================
    H: mostra ajuda

    Laberint: laberint01
    Encara no resolt

    Intents actuals: 1
    ┌─────┐
    │·····│
    │·····│
    →····· 
    │·····│
    └─────┘

    > h
    Les opcions disponibles són:
    H: Mostra aquest text d'ajuda
    L: gira a l'esquerra
    R: gira a la dreta
    F: mou una passa endavant
    nF: mou n passes endavant
    Q: Sortir

    Intents actuals: 1
    ┌─────┐
    │·····│
    │·····│
    →····· 
    │·····│
    └─────┘

    > Q
    Adéu CAGUETA!

A banda, aquesta simulació demostra com el programa representa el laberint, amb
els seus límits, l'entrada i la sortida, els espais no explorats (els '·') i
l'avatar en forma de fletxa que indica tant la posició com el sentit del seu
moviment.

Cal tenir present també el contingut de ``laberint01.dat``:

.. code-block:: console

    $  cat laberint01.dat 
    6x7
    XXXXXXX
    X...X.X
    XX.X..X
    E...X.G
    X.....X
    XXXXXXX

En la primera línia s'especifica les dimensions del laberint. En aquest cas 6
files i 7 columnes.

Tant els límits del laberint com les parets interiors estan marcats amb 'X'.
L'entrada està marcada amb 'E' i la sortida amb 'G'. La resta de posicions dins
del laberint es representen amb un '.' (punt). 



Simulació 2: Un laberint trivial
================================

En aquesta ocasió farem servir un laberint trivial

.. code-block:: console

    $ cat laberint02.dat
    3x2
    XX
    EG
    XX

Aquí la simulació:

.. code-block:: console

    $  java MazeGame laberint02.dat 
    Joc del laberint
    ================
    H: mostra ajuda

    Laberint: laberint02
    Encara no resolt

    Intents actuals: 1
    ┌┐
    → 
    └┘

    > f
    Aconseguit!
    Intents actuals: 1
    ┌┐
    →
    └┘

    Has resolt el laberint en 1 intent

    Nou rècord! Indica el teu nom:
    Winner24

Aquesta simulació mostra un dels laberints més petits possibles: 3 files i 2
columnes.

En el moment que l'avatar arriba a una porta, finalitza l'execució.

Simulació 3: Soluciona laberint sense superar rècord
====================================================

.. code-block:: console

    $ java MazeGame laberint03.dat

    Joc del laberint
    ================

    H: mostra ajuda

    Laberint: laberint03
    Rècord actual: Winner24 en 2 intents

    Intents actuals: 1
    ┌─────┐
    │·····│
    │·····│
    →····· 
    │·····│
    │·····│
    └─────┘

    > F
    Intents actuals: 1
    ┌─────┐
    │·····│
    │·····│
    →···· 
    │·····│
    │·····│
    └─────┘

    > L
    Intents actuals: 1
    ┌─────┐
    │·····│
    │·····│
    ↑···· 
    │·····│
    │·····│
    └─────┘

    > F
    Xoc!
    Intents actuals: 2
    ┌─────┐
    │·····│
    │█····│
    → ···· 
    │·····│
    │·····│
    └─────┘

    > F
    Intents actuals: 2
    ┌─────┐
    │·····│
    │█····│
     →···· 
    │·····│
    │·····│
    └─────┘

    > F
    Intents actuals: 2
    ┌─────┐
    │·····│
    │█····│
      →··· 
    │·····│
    │·····│
    └─────┘

    > F
    Intents actuals: 2
    ┌─────┐
    │·····│
    │█····│
       →·· 
    │·····│
    │·····│
    └─────┘

    > F
    Xoc!
    Intents actuals: 3
    ┌─────┐
    │·····│
    │█····│
    →   █· 
    │·····│
    │·····│
    └─────┘

    > 3F
    Intents actuals: 3
    ┌─────┐
    │·····│
    │█····│
    →   █· 
    │·····│
    │·····│
    └─────┘

    > L
    Intents actuals: 3
    ┌─────┐
    │·····│
    │█····│
       ↑█· 
    │·····│
    │·····│
    └─────┘

    > F
    Xoc!
    Intents actuals: 4
    ┌─────┐
    │·····│
    │█·█··│
    →   █· 
    │·····│
    │·····│
    └─────┘

    > 3FRF
    Intents actuals: 4
    ┌─────┐
    │·····│
    │█·█··│
        █· 
    │··↓··│
    │·····│
    └─────┘

    > L2FL
    Intents actuals: 4
    ┌─────┐
    │·····│
    │█·█··│
        █· 
    │··  ↑│
    │·····│
    └─────┘

    > FRF
    Aconseguit!
    Intents actuals: 4
    ┌─────┐
    │·····│
    │█·█··│
        █ →
    │··   │
    │·····│
    └─────┘

    Has resolt el laberint en 4 intents

    No has superat el rècord. Potser la següent vegada.

En aquesta simulació, veiem com:

* Inicialment fa una passa endavant amb 'F'

  L'opció 'F' (Forward) indica fer una passa en el sentit de la fletxa que representa l'avatar.

* A continuació gira a l'esquerra amb 'L'

  La fletxa apunta amunt.

* La següent passa endavant es troba amb una paret interna.

  Apareix l'avís de 'Xoc!' i s'incrementa el nombre d'intents actuals que ara ja són 2.

  La paret amb la que ha xocat ara és visible.

  El camí que ha explorat fins ara, que no correspon a una paret, apareix en blanc.

  L'avatar torna a la posició de sortida.

* A continuació fa 4 passes seguides i torna a xocar.

  Les tres primeres passes no tenen cap problema. La primera va a parar a una
  posició ja explorada, les altres dues exploren dues noves posicions.
  Finalment la darrera passa fa xocar contra una paret.

  L'avatar torna a la seva posició d'origen, la nova paret descoberta així com
  les posicions explorades, s'afegeixen a la informació ja visible de l'intent
  previ. Anem pel tercer intent!

* Com que ja veu que hi ha tres passes segures endavant, pot fer un pas múltiple.

  Indica tres passes endavant fent "3F"

  L'avatar avança les tres passes

* Gira a l'esquerra novament, fa una passa endavant també novament i, encara
  novament, torna a xocar-se.

* Sense desanimar-se, fa tres passes endavant, gira a la dreta i fa una passa
  endavant, tot junt, amb la comanda "3FRF"

  Tot seguir fa "L2FL" tot esquivant la paret trobada. De moment bé!

  A continuació fa una passa, gira a la dreta i torna a fer una passa amb "FRF",
  el que du l'avatar a la sortida.

* La partida ha finalitzat.

  El programa indica quants intents han calgut i, com que són més que el
  rècord, informa que no s'ha aconseguit superar.

  El programa finalitza aquí l'execució.


Simulació 4: Un laberint amb moltes portes
==========================================

Amb aquest exemple veurem que poden haver-hi més d'una porta i que la jugadora
té una sort que no s'ho creu ni ella:

El laberint té la següent descripció:

.. code-block:: console

   $ cat laberint04.dat
    7x8
    XXGXXXXX
    X.X....X
    XX..X.XG
    E..X...X
    XXXX.XXG
    G....X.G
    XXXXXXXX

.. code-block:: console

    Joc del laberint
    ================
    H: mostra ajuda

    Laberint: laberint04
    Rècord actual: Normalet54 en 241 intents

    Intents actuals: 1
    ┌─ ────┐
    │······│
    │······ 
    →······│
    │······ 
    ······ 
    └──────┘

    > 2FLFRFLFR2FR2FRFL2FR4F
    Aconseguit!
    Intents actuals: 1
    ┌─ ────┐
    │··   ·│
    │·  · · 
       ·  ·│
    │··· ·· 
    ←    ·· 
    └──────┘

    Has resolt el laberint en 1 intent

    Nou rècord! Indica el teu nom:
    Eleftèria

D'acord, és poc creïble que *Eleftèria* pugui haver arribat a la sortida
d'aquest laberint en un únic intent i amb una sola comanda, sense haver fet
algun tipus de trampa. Recorda que és una simulació i que el temps que dediquis
llegint passes inventades el podries utilitzar començant el programa.


Consideracions adidionals
=========================

Aquestes són algunes consideracions addicionals que no es veuen a les simulacions:

* L'extensió d'un laberint ha de ser ``.dat``, però si l'argument rebut per
  línia de comandes no presenta aquesta extensió, el programa serà capaç de
  cercar si hi ha un fitxer amb el nom rebut tot afegint l'extensió ``.dat``

  Per exemple, les següents dues crides seran equivalents:

  .. code-block:: console

    $ java MazeGame laberint01
    $ java MazeGame laberint01.dat


* Les dimensions del laberint s'han de poder expressar amb valors enters
  (``int``) És a dir, que el nombre de files estarà entre 2 i
  ``Integer.MAX_VALUE``.

* Tot laberint ha de tenir una única entrada i una o més sortides.

* Tant les entrades com les sortides han de trobar-se exclusivament en els
  límits del laberint.

* No poden haver entrades ni sortides a les cantonades del laberint.

  Aquesta restricció fa que els laberints més petits siguin de 2x3 o 3x2.

* Si l'avatar xoca contra un dels límits o bé torna a l'entrada, es considera
  un xoc com si hagués xocat amb una paret interna.

* Si es demana un moviment que deixa l'avatar més enllà d'una porta, es
  considera que ha arribat igualment. És a dir, si amb 'F' arriba a la sortida,
  '100F' també arribaria a la sortida.

* Les comandes seran vàlides tant si són en majúscules com minúscules. A més,
  en cas que hi hagi espais en blanc a la comanda, tant a l'inici, com al
  final, com entre mig, aquests espais seran ignorats.

  Per exemple, les següents comandes es considerarien equivalents:

  .. code-block:: console

    > 2F
    >    2F
    >    2      F
    > FF
    > F   F


Missatges d'error
=================

Hi ha uns quants errors que cal tenir en compte, a banda dels casos indicats a
la secció de consideracions addicionals.

- Si no s'especifica el nom del laberint

- Se n'expecifica més d'un

- El laberint especificat no correspon a un fitxer llegible

- La dimensió del laberint no correspon amb la descripció de la forma del
  laberint

- L'especificació de l'entrada o les sortides no respecta les consideracions anteriors


Caràcters especials
===================

La representació final del laberint que mostrarà el teu programa als usuaris,
queda a la teva decisió. En cas que t'hagi agradat la manera amb que es veu a
les simulacions d'aquest enunciat, aquí tens el següent codi que podries usar
al teu programa:

.. code-block:: java

    public class MazeChars {
        public static final char CORNER_UL = '┌';
        public static final char CORNER_DL = '└';
        public static final char CORNER_UR = '┐';
        public static final char CORNER_DR = '┘';
        public static final char LIMIT_V = '│';
        public static final char LIMIT_H = '─';
        public static final char ARROW_UP = '↑';
        public static final char ARROW_DOWN = '↓';
        public static final char ARROW_LEFT = '←';
        public static final char ARROW_RIGHT = '→';
        public static final char WALL = '■';
        public static final char EMPTY = '·';
    }

Ampliacions
===========

El que hem vist fins ara, seria la versió més bàsica del joc que ens han
demanat. Podem però fer ampliacions. Aquí algunes idees que podrien temptar-te:

Generador de laberints
----------------------

Com hem vist, els laberints s'especifiquen en un fitxer de text pla i, per
tant, són perfectament editables amb el mateix editor amb que programem. Amb
tot, donat que el format té uns requisits molt marcats, pot ser còmode una eina
que ens permeti generar-los.

Per aquesta raó, desenvoluparem un ajudant en la generació de laberints.

El generador de laberints també ens oferirà una interacció per terminal, amb un
prompt i un conjunt de funcionalitats.

Aquestes seran les comandes disponibles:

* H: Mostra una llista amb les opcions disponibles.

* L: Llistarà tots els fitxers de laberint disponibles a la carpeta actual.

* D nom: Mostrarà els detalls d'un dels laberints disponibles.

  Els detalls que mostrarà són:

  * Nom del laberint. És el nom del fitxer.

  * Validesa. Si el fitxer conté una definició vàlida de laberint segons el validador.

    En cas que la definició no sigui vàlida, no mostrarà res més.

  * Descripció del laberint

  * Dimensions del laberint. És a dir, nombre de files per nombre de columnes

  * Forma del laberint. És a dir, els elements que defineixen les parets del laberint.

  * En cas que el laberint hagi estat resolt, mostrarà els detalls del rècord: nom i nombre d'intents.
    Si no està resolt, ho indicarà.

* R nom: eliminarà un laberint dels disponibles, a partir del nom.

* A nom: afegirà un nou laberint als disponibles.

* Q: finalitzar l'aplicació.


Nota: el nom es pot especificar amb o sense l'extensió ``.dat``

Considera la següent simulació que mostra l'ús de les diferents funcionalitats
excepte l'afegit de un nou laberint.

.. code-block:: console

    $ ls *.dat *.txt
    laberint01.dat
    laberint02.dat
    cosarara.dat
    altrestemes.txt

    $ java MazeGen
    Generador de laberints
    H: Ajuda

    > H

    Les opcions disponibles d'aquest generador de laberints són:
    H: Mostra aquest text d'ajuda
    L: Llistar fitxers de laberint
    A: Afegir fitxer de laberint
    R: Eliminar fitxer de laberint
    D: Mostra els detalls d'un fitxer de laberint
    Q: Sortir

    > L
    laberint01.dat
    laberint02.dat
    cosarara.dat

    > D laberint01

    Nom: laberint01

    Descripció:
    Aquest és el laberint més fàcil del món.
    El resoldràs en un tres i no res.

    Dimensions: 7x7

    Forma:

    ┌─────┐
    │·····│
    │·····│
    →···■· 
    │·····│
    │·····│
    └─────┘

    Record:
    - nom: Winner24
    - intents: 3

    > D desconegut

    No es troba el fitxer: desconegut.dat

    > D laberint02.dat

    Nom: laberint02

    Descripció:
    Aquest ès un laberint molt allargat.

    Dimensions: 3x20

    Forma:

    ┌──────────────────┐
    →·················· 
    └──────────────────┘

    No resolt

    > D cosarara.dat

    Nom: cosarara

    Especificació no vàlida.

    > D laberint02
    S'eliminarà el fitxer: laberint02.dat
    Segur? (S/N):
    No

    Cap fitxer eliminat.

    > D laberint02.dat
    S'eliminarà el fitxer: laberint02.dat
    Segur? (S/N):
    Sí

    Eliminat el fitxer: laberint02.dat

    > L
    laberint01.dat
    cosarara.dat

    > Q

L'ús de l'opció d'afegir nou laberint es simula a continuació:

.. code-block:: console

    $ java MazeGen
    Generador de laberints
    H: Ajuda

    > A laberint01

    Ja existeix el fitxer: laberint01.dat

    > A laberint03.dat

    Contesteu les següents preguntes.
    En qualsevol moment escriviu "Q!" per cancel·lar la generació.

    Descripció del laberint? (línia en blanc per finalitzar)

    Un laverin ke konstara
    una mica més de aish que malament escric!
    Q!

    Cancel·lat

    > A laberint03

    Contesteu les següents preguntes.
    En qualsevol moment escriviu "Q!" per cancel·lar la generació.

    Descripció del laberint? (línia en blanc per finalitzar)

    Un laberint molón


    Dimensions del laberint? (ex. 3x4 per un laberint de 3 files i 4 columnes)
    1x5

    Cal un mínim de 3 files i 3 columnes.

    Dimensions del laberint? (ex. 3x4 per un laberint de 3 files i 4 columnes)
    7x7

    Forma actual:

    ┌─────┐
    │·····│
    │·····│
    │·····│
    │·····│
    │·····│
    └─────┘

    Coordenada de l'entrada? (ex. 0,1)
    0,0
    L'entrada no pot estar en una cantonada.

    Coordenada de l'entrada? (ex. 0,1)
    0,3

    Forma actual:

    ┌──↓──┐
    │·····│
    │·····│
    │·····│
    │·····│
    │·····│
    └─────┘

    Quantes sortides? Entre 1 i 19
    5031

    No hi caben tantes sortides.

    Quantes sortides? Entre 1 i 19
    12

    Coordenada de la sortida nr. 1?
    0, 3

    Aquesta posició està ocupada.

    Coordenada de la sortida nr. 1?
    0, 4

    Forma actual:

    ┌──↓ ─┐
    │·····│
    │·····│
    │·····│
    │·····│
    │·····│
    └─────┘

    Coordenada de la sortida nr. 2?
    Q!

    Cancel·lat

    > A laberint03

    Contesteu les següents preguntes.
    En qualsevol moment escriviu "Q!" per cancel·lar la generació.

    Descripció del laberint? (línia en blanc per finalitzar)

    Un laberint molón


    Dimensions del laberint? (ex. 3x4 per un laberint de 3 files i 4 columnes)
    7x6

    Forma actual:

    ┌────┐
    │····│
    │····│
    │····│
    │····│
    │····│
    └────┘

    Coordenada de l'entrada? (ex. 0,1)
    0,3

    Forma actual:

    ┌──↓─┐
    │····│
    │····│
    │····│
    │····│
    │····│
    └────┘

    Quantes sortides? Entre 1 i 17
    1

    Coordenada de la sortida nr. 1?
    6, 1

    Forma actual:

    ┌──↓─┐
    │····│
    │····│
    │····│
    │····│
    │····│
    └ ───┘

    Definiu les coordenades de les parets del laberint.
    La coordenada intercanviarà paret amb espai.
    Línia en blanc per finalitzar.

    0, 4
    No es poden modificar els límits del laberint.
    1,4

    ┌──↓─┐
    │···■│
    │····│
    │····│
    │····│
    │····│
    └ ───┘

    1,3
    ┌──↓─┐
    │··■■│
    │····│
    │····│
    │····│
    │····│
    └ ───┘

    1,3
    ┌──↓─┐
    │···■│
    │····│
    │····│
    │····│
    │····│
    └ ───┘

    2,3
    ┌──↓─┐
    │···■│
    │··■·│
    │····│
    │····│
    │····│
    └ ───┘

    3, 1
    ┌──↓─┐
    │···■│
    │··■·│
    │■···│
    │····│
    │····│
    └ ───┘

    4, 2
    ┌──↓─┐
    │···■│
    │··■·│
    │■···│
    │·■··│
    │····│
    └ ───┘


    Finalitzada la definició de la forma

    Nom: laberint03

    Descripció:

    Un laberint molón

    Dimensions: 7x6

    Forma:

    ┌──↓─┐
    │···■│
    │··■·│
    │■···│
    │·■··│
    │····│
    └ ───┘

    Crear laberint? (S/N)
    S
    Laberint creat

    > Q

Laberint solucionable
---------------------

Per desenvolupar la versió bàsica del laberint, cal que implementis algun
validador que asseguri que els requeriments s'acompleixen.

El validador "bàsic" de l'exercici, té una limitació important: considera
vàlids laberints que no tenen solució.

Per exemple:

.. code-block:: none

    ┌──↓─┐
    │···■│
    │·■■·│
    │■···│
    │·■··│
    │····│
    └ ───┘

Amplia el validador, de manera que comprovi si el laberint té o no solució.
Per poder-ho fer, considera investigar el concepte de *backtracking* i gaudeix
de l'experiència.


Finestra de laberint
--------------------

El joc del laberint que hem desenvolupat té una limitació important. Els
laberints només poden ser jugats còmodament si hi caben a la pantalla.

Aquesta ampliació proposa oferir laberints de mida realment llarga. Quan el
laberint passa d'una determinada mida, el programa podria mostrar només una
part d'aquest, una finestra. L'avatar podria quedar centrat o bé que es mostrés
més a partir del sentit del moviment.

Editor de laberints
-------------------

El generador de laberints té un munt de limitacions. Si has de fer un laberint
realment gros, resulta molt incòmode definir les parets interiors posició a
posició.

Afegeix la possibilitat de considerar rangs en comptes de coordenades simples.

Per exemple, en acceptar ``3-6,2`` implicaria ``3,2``, ``4,2``, ``5,2`` i
``6,2``. Encara pots anar a més, acceptant múltiples rangs en una comanda, com
ara ``3-6,4-5;12-23,5-30``.

Avatars compactes
-----------------

Probablement has definit un objecte que encapsula la informació d'un avatar.

Aquest objecte ha de gestionar la posició dins del laberint (coordenades) el
sentit del moviment de l'avatar.

Molt probablement aquesta informació l'has implementada amb una propietat per
cada element (fila, columna, sentit)

En aquesta ampliació, et proposo que intentis implementar tota la informació
d'un avatar fent servir un únic ``long``!

Com és possible? Fixa't que les coordenades han de poder representar-se amb un
``int`` i que han de ser sempre positives. Això fa que sobri un bit dels 32 que
usem per la fila, el mateix per la columna. Així que tenim 2 bits sense usar.

Per altra banda, el sentit del moviment són quatre valors possibles. Quatre
valors es poden codificar en… 2 bits! Mmmm

Finalment un ``long`` són 64 bits (com 2 ``int``)

T'atreveixes a canviar la implementació de ``Avatar`` de manera que només faci
servir internament un ``long`` per codificar tota la info? El més fort de tot és
que si fas aquesta modificació, la resta dels programes que fan servir
``Avatar`` ni se n'enterarien!

Per fer aquesta ampliació hauràs d'investigar una mica els operadors
*bit-wise*.

Binaris
-------

El fet que els jugadors poden fer trampes mirant la definició d'un laberint,
no acaba de ser satisfactori. Per què no complicar una mica la vida dels
*cheaters* guardant aquesta informació en fitxers binaris?

Això és també vàlid per l'emmagatzemament dels rècords. Ara és massa fàcil pels
jugadors tramposos editar aquest fitxer i dir que han guanyat, sense ni tant
sols haver jugat.

Donat que el nombre de símbols diferents que requereix un laberint és realment
reduït, les possibilitats de compactació són moltes. A més a més, no cal ni
guardar la dimensió ja que, en ser tan petits, llegiríem tota la info d'una
tacada.

Lliurament
==========

El lliurament d'aquesta pràctica inclourà els següents continguts:

* Documentació del projecte

* Codi de la solució proposada

* Jocs de prova

Anem a pams:

Documentació
------------

La documentació del projecte consisteix en un document en format pdf amb els
següents continguts:

* Una portada que inclou el nom del projecte, els noms dels desenvolupadors, la
  data (amb mes i any és suficient), el context (centre, cicle, curs,
  assignatura/es implicades)

* Pàgines numerades, incloent total de pàgines, i amb un peu on indiqui, com a
  mínim, el títol del projecte tal i com apareix a la portada.

* Una taula de continguts amb indicació dels números de pàgina

* Una introducció que descrigui el projecte i l'estructura del document.

* Una secció amb diferents diagrames UML que descriguin el projecte.

* Una secció amb la descripció de la funcionalitat implementada, ressaltant si
  escau, les ampliacions realitzades.

* Una secció que inclogui el llistat dels fitxers que es lliuren, com ara els
  codis font del programa, laberints de prova i jocs de prova.

  Cada nom de fitxer ha d'anar acompanyat d'una descripció de què conté.

* Una secció descrivint com provar les diferents opcions del programa. Pot ser
  similar a les simulacions d'aquest mateix document.

* Una secció, a mode de conclusions, en la que es descrigui aspectes del
  projecte que cada desenvolupador/a vulgui destacar, com per exemple, què ha
  aprés, que li hagués agradat fer, etc.

Codi
----

El codi del programa està format per 


Jocs de prova
-------------

Donat que és un programa d'entrada/sortida per consola, és possible guardar el
contingut d'una interacció a un fitxer, i la sortida esperada a un altre, de
manera que es pugui comprovar si el programa passa o no la prova de manera
automàtica.

Per exemple, considera la simulació 2 d'aquest enunciat.

Per fer aquesta prova afegiries els següents tres fitxers:

.. code-block:: console

    $ cat laberint02.dat
    3x2
    XX
    EG
    XX

    $ cat test_laberint02.in
    F
    Winner24

    $ cat test_laberint02.out
    Joc del laberint
    ================
    H: mostra ajuda

    Laberint: laberint02
    Encara no resolt

    Intents actuals: 1
    ┌┐
    → 
    └┘

    > Aconseguit!
    Intents actuals: 1
    ┌┐
    →
    └┘

    Has resolt el laberint en 1 intent

    Nou rècord! Indica el teu nom:

Per realitzar aquesta prova, caldrà simplement fer:

.. code-block:: console

   $ java MazeGame laberint02.dat < test_laberint02.in | diff - test_laberint02.out

Per descomptat, pots fer-te un *prgtest-lite* amb un petit guió (potser en
*bash*) que llenci totes les proves que tinguis disponibles. No és obligatori,
però segurament t'agradarà disposar-ne. Per descomptat, demana ajut si no saps
ni per on començar.

Quines proves has de fer? Intenta que hi hagi proves per cadascuna de les
funcionalitats que has implementat. Per exemple, una prova que permeti que el
programa generi cada missatge d'error.

No tinguis massa ambició a l'hora de definir una prova. Com més clar sigui
l'element que vulguis provar, millor. És preferible tres proves que comprovin
tres punts concrets, que no pas una que faci la prova de tots tres.

No oblidis descriure a la documentació, quin és l'objectiu que persegueixes amb
cada prova.
