##############################################################
|exerciseicon__T| Exercici 52_21. Reassignant responsabilitats
##############################################################

.. rubric:: Context

* Carpeta de lliurament: ``52_21_moviment/``

* Continguts relacionats: :doc:`refactoring_responsabilitat`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Considera si el mètode `bonificacionsDeLloguer` que hem creat per
l'exercici anterior, correspon realment a la classe on es troba.

Aplica un *moviment de mètode* tot passant-lo a una classe més adequada. Les
proves d'aquest exercici esperen que segueixis les convencions que vam fer
servir amb la quantitat.

El codi resultant hauria de permetre que ``Client.informe()`` funcioni
amb el següent codi:

.. code-block:: java
    :linenos:
    :emphasize-lines: 8

    public String informe() {
        double total = 0;
        int bonificacions = 0;
        String resultat = "Informe de lloguers del client " + 
            getNom() + 
            " (" + getNif() + ")\n";
        for (Lloguer lloguer: lloguers) {
            bonificacions += /* XXX crida al mètode mogut */;

            // composa els resultats d'aquest lloguer
            resultat += "\t" +
                lloguer.getVehicle().getMarca() +
                " " +
                lloguer.getVehicle().getModel() + ": " +
                ( /* ??? */ * 30) + "€" + "\n";
            total += /* ??? */ * 30;
        }

        // afegeix informació final
        resultat += "Import a pagar: " + total + "€\n" +
            "Punts guanyats: " + bonificacions + "\n";
        return resultat;
    }

Nota: Ara eliminar la variable temporal ``bonificacions`` no serà tan directe
com amb ``quantitat``. De moment la mantindrem.
