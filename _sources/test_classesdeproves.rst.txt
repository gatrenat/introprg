#################
Classes de proves
#################

Hi ha moltes i molt diferents maneres de provar els sistemes
informàtics. Tantes que es solen intentar classificar per poder-les
entendre millor.

Perspectives
============

Una de les classificacions habituals, es basa en les diferents
perspectives de l'aplicació.

.. sidebar:: Quí fa les proves

    .. graphviz::

        digraph {
            rankdir=TB
            edge [arrowhead=none]
            "Quí fa les proves" -> usuaris
            "Quí fa les proves" -> testers
            "Quí fa les proves" -> developers
            usuaris -> "Caixa negra"
            testers -> "Caixa grisa"
            developers -> "Caixa blanca"
            "Caixa negra"  -> perspectiva
            "Caixa grisa"  -> perspectiva
            "Caixa blanca" -> perspectiva
            "Caixa blanca"     [shape=square, fixedsize=true, width=1.5]
            "Caixa negra"      [shape=square, fixedsize=true, width=1.5]
            "Caixa grisa"      [shape=square, fixedsize=true, width=1.5]
            usuaris            [shape=circle, fixedsize=true, width=1.5]
            testers            [shape=circle, fixedsize=true, width=1.5]
            developers    [shape=circle, fixedsize=true, width=1.5]

        }


La teva aplicació es pot veure (i s'ha de veure) des de tres
perspectives: usuaris, testejadors i desenvolupadors.

* Els usuaris

  Els usuaris veuen l'aplicació des de fora. És a dir, a partir de la
  seva interfície d'usuari. També, si vols, a partir dels casos
  d'ús. L'aplicació o bé fa el que esperen que faci, o bé no ho fa.

  No se'ls acudirà mirar, per exemple, el contingut de la BD. De fet,
  potser no tenen ni idea de què és ni, en tot cas, gaire interès.

  La majoria de nosaltres som usuaris d'alguna cosa que no comprenem
  per dins, com a mínim no profundament. Pensa en la rentadora, el
  cotxe, o el jersei que ens va fer l'àvia. Què passa quan esperem que
  faci el centrifugat, la nostra rentadora comença a treure escuma per
  tot arreu?, o quan posem primera al cotxe fa un soroll i fa que ens
  xoquem amb el vehicle del darrere?, o quan ens posem el jersei la
  nostra ma surt per l'aixella d'una de les mànigues? La majoria
  simplement direm que això no rutlla.

  Des de la perspectiva d'un usuari, l'aplicació és una **caixa
  negra**: el que hi ha dins del sistema està fora del seu abast.

* Els testejadors

  Hi ha gent, amb probablement el coneixement tècnic per desenvolupar
  aplicacions, que es dedica a provar aplicacions fetes per altres.
  Normalment no són els usuaris finals de l'aplicació i,
  desitjablement, tampoc són els que l'han desenvolupada.

  Comproven la funcionalitat (com amb la caixa negra) però, a l'hora,
  comproven que per dins, les coses canvien com s'esperava.  Per
  exemple, poden mirar la BD per veure si s'ha emmagatzemat
  correctament l'alta d'una nau industrial.

  Són necessaris especialment per a aquelles aplicacions que no
  permeten veure els resultats fàcilment. Per exemple, les aplicacions
  web sovint maneguen dades entre taules de la bd sense donar una
  sortida que permeti saber si aquestes dades es troben correctament
  emmagatzemades. En aquests casos, cal accedir a la BD juntament amb
  la interfície.

  Es diu que els testejadors veuen l'aplicació com una **caixa grisa**.

* Els desenvolupadors

  Els desenvolupadors veuen (i viuen en) els detalls d'implementació.
  Es preocupen per coses com ara si les classes tenen un bon disseny,
  si hi ha codi duplicat, si hi ha inconsistències en la representació
  de les dades…

  Es diu que veuen l'aplicació com una **caixa blanca**.

Abast de les proves
===================


.. graphviz::

    digraph {
        "Abast de les proves" -> "de sistema"
        "Abast de les proves" -> "d'integració"
        "Abast de les proves" -> "funcional"
        "Abast de les proves" -> "unitàries"
    }

Les proves sovint s'agrupen tenint en compte el seu abast. Les
categories més habituals són proves de sistema, les d'integració i les
unitàries.

Les *proves de sistema* (també *end-to-end*) posen tots els elements de
l'aplicació en conjunt, i sense tenir en compte els detalls de codificació, ens
enfoquem en les funcionalitats que demanà el client. Aquestes proves es solen
realitzar en un entorn el més semblant possible al de l'usuari final. Sovint són
proves de *caixa negra* o *grisa*.

Les *proves d'integració* proven com diferents parts del sistema treballen
quan les posem juntes. Poden incloure des de vàries classes a tot un subsistema.
A diferència de les de sistema, no cal que totes les parts estiguin disponibles.
Habitualment són proves de *caixa grisa*.

Les *proves funcionals* proven una funcionalitat concreta (*cas d'ús*) del
sistema. Per exemple, una prova de que podem afegir correctament una nau
industrial. Aquestes proves sovint són de *caixa grisa* o *blanca*.

Les *proves unitàries* s'enfoquen en una petita peça de codi aïllada de
la resta de l'aplicació. Miren de minimitzar dependències amb altres
parts i de provar tots els possibles camins (ex. totes les branques de
cada condicional). Aquest tipus de proves és generalment
automatitzable i, solen considerar-se de *caixa blanca*.
