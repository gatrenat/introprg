######################################################
|exerciseicon__T| Exercici 32_45. La utilitat ``join``
######################################################

.. rubric:: Context

* Carpeta de lliurament: ``32_45_join/``

* Continguts relacionats: :doc:`arrays_en_java`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Implementa una versió simplificada de la utilitat ``String.join()``

La versió que implementarem oferirà dues versions que permetran indicar o no el
darrer separador.

Les signatures a implementar són:

.. code-block:: java

    // retorna un String format per les cadenes de text separades pel separador amb darrer separador
    public static String junta(String[] cadenes, String separador, String darrerSeparador)
    // equivalent a junta(cadenes, separador, separador)
    public static String junta(String[] cadenes, String separador)

Pots provar el seu funcionament amb el següent codi d'exemple:

.. code-block:: java
   :linenos:

    /* Aquest programa comprova el funcionament de la funció UtilSTring.junta() */
    public class Main {
        public static void main(String[] args) {
            System.out.println("Separador?");
            String separador = Entrada.readLine();
            System.out.println("Darrer separador?");
            String darrerSeparador = Entrada.readLine();
            System.out.println("Valors:");
            if (args.length > 0) {
                for (int i=0; i < args.length; i++) {
                    System.out.printf("- \"%s\"%n", args[i]);
                }
            } else {
                System.out.println("Cap valor");
            }
            System.out.printf("junta(valors, \"%s\", \"%s\") -> \"%s\"%n",
                                separador, darrerSeparador,
                                UtilString.junta(args, separador, darrerSeparador));
        }
    }

Unes simulacions d'execució:

.. code-block:: console
   :emphasize-lines: 1, 3, 5-

   $ java Main llet sal mantega
   Separador?
   ,
   Darrer separador?
    i
   Valors:
   - "llet"
   - "sal"
   - "mantega"
   junta(valors, ", ", " i ") -> "llet, sal i mantega"

Atenció que el separador és ``", "``, és a dir, té un espai després de la coma.
El darrer separador és ``" i "``, amb espais abans i després de la "i".

.. code-block:: console
   :emphasize-lines: 1, 3, 5-

   $ java Main llet sal mantega sucre
   Separador?
   /
   Darrer separador?
   /
   Valors:
   - "llet"
   - "sal"
   - "mantega"
   - "sucre"
   junta(valors, "/", "/") -> "llet/sal/mantega/sucre"

.. code-block:: console
   :emphasize-lines: 1, 3, 5-

   $ java Main 1 2 3
   Separador?
    +
   Darrer separador?
    =
   Valors:
   - "1"
   - "2"
   - "3"
   junta(valors, " + ", " = ") -> "1 + 2 = 3"

.. code-block:: console
   :emphasize-lines: 1, 3, 5

   $ java Main
   Separador?
   ,
   Darrer separador?
    i
   Valors:
   cap valor
   junta(valors, ", ", " i ") -> ""

Per descomptat, no facis servir ``String.join()``!
