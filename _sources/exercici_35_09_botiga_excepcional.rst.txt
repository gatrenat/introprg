################################################################
|exerciseicon__T| Exercici 35_09. Excepcions a la botiga de vins
################################################################

.. rubric:: Context

* Carpeta de lliurament: ``35_09_botiga_excepcional/``

* Continguts relacionats: :doc:`bib_excepcions`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

La nostra aplicació està funcionant força bé. La Sra. Estrella està
contenta i ha començat a provar-la amb els seus clients. El Tomet no està
tant content perquè li ha tocat anar introduint tots els vins a
``botiga.csv`` però, com dirien els savis *"averestudiao"*.

Ara que tenim un moment de descans, és un bon moment per millorar el
nostre codi. 

Un dels punts febles del codi és la gestió d'errors. En concret, la classe
``Botiga`` fa un cert abús del retorn de ``null`` cada cop que troba un
error. Alguns errors pot ser raonable gestionar-los així però d'altres
definitivament no.

.. uml::
    :align: center
    :caption: Diagrama de l'aplicació

    class Entorn
    class Botiga
    class Vi
    class BotigaException extends Exception {
        BotigaException()
        BotigaException(missatge: String)
    }
    Botiga --> BotigaException
    Entorn --> BotigaException
    class Exception #lightgrey
    class BotigaException #yellow

    Botiga o-- Vi
    Entorn *-- Botiga
    Entorn --> Vi

    hide class circle
    skinparam classAttributeIconSize 0
    skinparam class {
        BackgroundColor White
        BorderColor Black
        ArrowColor Black
    }

.. -*  for vim highligting issues



Aquests són els errors que haurem de controlar amb excepcions a partir
d'ara:

* el constructor ``Botiga(int maxVins)``, en comptes de posar el valor per
  defecte, llençarà una excepció ``IllegalArgumentException`` quan se li
  passi un valor menor que 1.

  El missatge que inclourà a l'excepció serà: ``"No es pot crear una
  botiga amb menys d'un vi"``.

* el mètode ``Botiga.cerca(String)`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi el valor ``null`` com a
  valor. El missatge serà ``"La referència no pot ser null"``.

* el mètode ``Botiga.cerca(Vi)`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi el valor ``null`` com a
  plantilla. El missatge serà ``"La plantilla no pot ser null"``.

* el mètode ``Botiga.afegeix()`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi el valor ``null`` com a vi a
  afegir. El missatge serà ``"El vi no pot ser null"``.

* el mètode ``Botiga.afegeix()`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi un vi no vàlid. El missatge serà
  ``"El vi ha de ser vàlid"``.

* el mètode ``Botiga.afegeix()`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi una instància de vi amb una
  referència que ja existeixi a la botiga. El missatge serà ``"Referència
  de vi repetida"``.

* el mètode ``Botiga.afegeix()`` llençarà l'excepció
  ``BotigaException`` quan la botiga estigui plena.
  Es tracta d'una nova excepció que hem de
  crear, que heretarà directament de ``Exception`` i que oferirà un
  constructor específic per determinar el missatge, i un per defecte que
  establirà com a missatge ``"Botiga plena"``.

* el mètode ``Botiga.elimina()`` llençarà l'excepció
  ``IllegalArgumentException`` quan rebi el valor ``null``, amb el
  missatge ``"La referència no pot ser null"``.

* el mètode ``Botiga.elimina()`` llençarà l'excepció
  ``IllegalArgumentException`` quan es demani un vi que no sigui a la
  botiga, amb el missatge ``"La instància a eliminar ha d'estar
  present"``.

* el mètode ``Botiga.elimina()`` llençarà l'excepció
  ``IllegalArgumentException`` quan es demani un vi que tingui estoc, amb
  el missatge ``"El vi a eliminar no pot tenir estoc"``.


Com que alguns d'aquests mètodes generaran excepcions gestionades, caldrà
modificar el codi de ``Entorn``.

En carregar els vins guardats a ``botiga.csv``, si es troba que hi ha
massa, ``Entorn`` mostrarà el missatge ``"ERROR: massa entrades a
botiga.csv"`` i permetrà treballar amb els vins que s'hagin pogut
carregar.

De moment ens quedarem aquí, doncs l'objectiu no és tant ser exhaustius
com començar a introduir el mecanisme d'excepcions a la nostra aplicació.
