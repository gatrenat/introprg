#########################################################
|exerciseicon__T| Exercici 52_26. Capçalera, detall i peu
#########################################################

.. rubric:: Context

* Carpeta de lliurament: ``52_26_metodes_lleugers/``

* Continguts relacionats: :doc:`refactoring_metodes_lleugers`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Distribueix el mètode *Client.informe()* de manera que quedin separades les
funcionalitats de construcció de la capçalera, el detall i el peu de l'informe.

Abans de les extraccions de mètode, ``informe()`` tenia el següent aspecte:

.. code-block:: java
   :linenos:

    public String informe() {
        String resultat = "Informe de lloguers del client " + 
            getNom() + 
            " (" + getNif() + ")\n";
        for (Lloguer lloguer: lloguers) {
            // composa els resultats d'aquest lloguer
            resultat += "\t" + 
                lloguer.getVehicle().getMarca() + 
                " " + 
                lloguer.getVehicle().getModel() + ": " +
                ( /* ??? */ * 30) + "€" + "\n";
        }

        // afegeix informació final
        resultat += "Import a pagar: " + importTotal() + "€\n" +
            "Punts guanyats: " + bonificacionsTotal() + "\n";
        return resultat;
    }

Un cop realitzades les extraccions, el codi resultant serà:

.. code-block:: java

    public String informe() {
        return composaCapsalera() +
               composaDetall() +
               composaPeu();
    }

Els nous mètodes, de moment, els mantindrem privats a la classe ``Client``.
